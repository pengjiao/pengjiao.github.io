[
{
	"uri": "/fr/basics/",
	"title": "Démarrage",
	"tags": [],
	"description": "",
	"content": "Chapitre 1 Démarrage Découvrez comment utiliser ce thème Hugo et apprenez-en les concepts\n"
},
{
	"uri": "/fr/basics/requirements/",
	"title": "Prérequis",
	"tags": [],
	"description": "",
	"content": "Grâce à la simplicité d\u0026rsquo;Hugo, cette page est vide car il n\u0026rsquo;y a quasi pas de prérequis pour utiliser le thème.\nTéléchargez la dernière version du binaire Hugo (\u0026gt; 0.25) pour votre Système d\u0026rsquo;exploitation (Windows, Linux, Mac) : et c\u0026rsquo;est tout !\n"
},
{
	"uri": "/fr/basics/installation/",
	"title": "Installation",
	"tags": [],
	"description": "",
	"content": "Les étapes suivantes sont là pour vous aider à initialiser votre site. Si vous ne connaissez pas du tout Hugo, il est fortement conseillé de vous entrainer en suivant ce super tuto pour débutants.\nCréer votre projet Hugo fournit une commande new pour créer un nouveau site.\nhugo new site \u0026lt;new_project\u0026gt; Installer le thème Installer le thème Hugo-theme-learn en suivant cette documentation\nLe repo du thème est : https://github.com/matcornic/hugo-theme-learn.git\nSinon, vous pouvez télécharger le thème sous forme d\u0026rsquo;un fichier .zip et extrayez le dans votre dossier de thèmes.\nConfiguration simple Lorsque vous générez votre site, vous pouvez définir un thème en utilisant l\u0026rsquo;option --theme. Il est conseillé de modifier votre fichier de configuration config.toml and définir votre thème par défaut. En passant, ajoutez les prérequis à l\u0026rsquo;utilisation de la fonctionnalité de recherche.\n# Modifiez le thème pour qu\u0026#39;il soit utilisé par défaut à chaque génération de site. theme = \u0026#34;hugo-theme-learn\u0026#34; # Pour la fonctionnalité de recherche [outputs] home = [ \u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] Créer votre première page chapitre Les chapitres sont des pages contenant d\u0026rsquo;autre pages filles. Elles ont un affichage spécial et contiennent habituellement juste un nom de chapitre, le titre et un résumé de la section.\n### Chapitre 1 # Démarrage Découvrez comment utiliser ce thème Hugo et apprenez en les concepts s\u0026rsquo;affiche comme\nHugo-theme-learn fournit des archétypes pour créer des squelettes pour votre site. Commencez par créer votre premier chapitre avec la commande suivante:\nhugo new --kind chapter basics/_index.md En ouvrant le fichier généré, vous devriez voir la propriété chapter=true en haut, paramètre quit définit que le page est un chapitre.\nCréer votre première page Puis, créez votre premier page dans le chapitre précédent. Pour ce faire, il existe deux possibilités :\nhugo new basics/first-content.md hugo new basics/second-content/_index.md N\u0026rsquo;hésitez pas à éditer ces fichiers en ajoutant des exemple de contenu et en remplaçant le paramètre title au début du fichier.\nLancer le site localement Lancez la commande suivante :\nhugo serve Se rendre sur http://localhost:1313\nVous devriez voir trois choses:\nVous avez un menu Basics à gauche, qui contient deux sous-menu avec des noms égal au paramètre title des fichiers précédemment générés. La page d\u0026rsquo;accueil vous explique comment la modifier. Suivez les instructions. Avec la commande hugo serve, la page se rafraichit automatiquement à chaque fois que vous sauvegardez. Super ! Générez le site Quand votre site est prêt à être déployé, lancez la commande suivante:\nhugo Un dossier public a été généré. Il contient tout le contenu statique et les ressources nécessaires pour votre site. Votre site peut maintenant être déployé en utilisant n\u0026rsquo;importe quel serveur !\nCe site peut être automatiquement publié et hébergé avec Netlify (Plus d\u0026rsquo;infos). Sinon, vous pouvez utiliser les Github pages\n"
},
{
	"uri": "/fr/basics/configuration/",
	"title": "Configuration",
	"tags": [],
	"description": "",
	"content": "Paramètres globaux du site En plus de la configuration globale d\u0026rsquo;Hugo, Hugo-theme-learn vous permet de définir les paramètres suivant dans votre fichier config.toml (ci-dessous sont affichées les valeurs par défaut).\nNotez que certains de ces paramètres sont expliqués en détails dans d\u0026rsquo;autres sections de cette documentation.\n[params] # L\u0026#39;URL préfixe pour éditer la page courante. Ce paramètre affichera un bouton \u0026#34;Modifier cette page\u0026#34; on haut de de chacune des pages. # Pratique pour donner les possibilité à vos utilisateurs de créer une merge request pour votre doc. # Allez voir le fichier config.toml de cette documentation pour avoir un exemple. editURL = \u0026#34;\u0026#34; # Autheur du site, est utilisé dans les informations meta author = \u0026#34;\u0026#34; # Description du site, est utilisé dans les informations meta description = \u0026#34;\u0026#34; # Affiche une icône lorsque la page a été visitée showVisitedLinks = false # Désactive la fonction de recherche. Une valeur à true cache la barre de recherche. disableSearch = false # Par défaut, le cache Javascript et CSS est automatiquement vidé lorsqu\u0026#39;une nouvelle version du site est générée. # Utilisez ce paramètre lorsque vous voulez désactiver ce comportement (c\u0026#39;est parfois incompatible avec certains proxys) disableAssetsBusting = false # Utilisez ce paramètre pour désactiver le bouton copy-to-clipboard pour le code formatté sur une ligne. disableInlineCopyToClipBoard = false # Un titre est défini par défaut lorsque vous utilisez un raccourci dans le menu. Utilisez ce paramètre pour le cacher. disableShortcutsTitle = false # S\u0026#39;il est réglé sur faux, un bouton Accueil apparaîtra sous la barre de recherche dans le menu. # Il redirige vers la page d\u0026#39;accueil de la langue actuelle si cela est spécifié. (La valeur par défaut est \u0026#34;/\u0026#34;) disableLandingPageButton = true # Si défini à true, empêche Hugo d\u0026#39;inclure le module \u0026#34;mermaid\u0026#34; s\u0026#39;il n\u0026#39;est pas nécessaire (réduira les temps de chargement et le trafic) disableMermaid = false # Spécifie l\u0026#39;emplacement distant du mermaid js customMermaidURL = \u0026#34;https://unpkg.com/mermaid@8.8.0/dist/mermaid.min.js\u0026#34; # Quand vous utilisez un site multi-langue, utilisez ce paramètre pour désactiver le bouton de changement de langue. disableLanguageSwitchingButton = false # Ordonne les sections dans menu par poids (\u0026#34;weight\u0026#34;) ou titre (\u0026#34;title\u0026#34;). Défaut à \u0026#34;weight\u0026#34; ordersectionsby = \u0026#34;weight\u0026#34; # Utilisez ce paramètre pour modifier le schéma de couleur du site. Les valeurs par défaut sont \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;\u0026#34; # Fournissez une liste de fichiers css personnalisés à charger par rapport depuis le dossier `static/` à la racine du site. custom_css = [\u0026#34;css/foo.css\u0026#34;, \u0026#34;css/bar.css\u0026#34;] Activer la recherche Si ce n\u0026rsquo;est pas déjà présent, ajoutez les lignes suivantes dans le fichier config.toml.\n[outputs] home = [ \u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] Le thème Learn utilise les dernières améliorations d\u0026rsquo;Hugo pour générer un fichier d\u0026rsquo;index JSON, prêt à être consommé par le moteur de recherche lunr.js.\nHugo génère lunrjs index.json à la racine du dossier public. Quand vous générez le site avec hugo server, Hugo génère le fichier en mémoire, il n\u0026rsquo;est donc pas disponible sur le disque.\nMermaid Les paramètres de configuration du mermaid peuvent également être définis sur une page spécifique. Dans ce cas, le paramètre global sera écrasé par le paramètre local.\nExemple:\nMermaid est globalement handicapé. Par défaut, elle ne sera chargée par aucune page.\nÀ la page \u0026ldquo;Architecture\u0026rdquo;, vous avez besoin d\u0026rsquo;un diagramme de classe. Vous pouvez régler les paramètres de mermaid localement pour ne charger que la sirène sur cette page (pas sur les autres).\nVous pouvez également désactiver mermaid pour des pages spécifiques tout en l\u0026rsquo;activant globalement. \u0026laquo;\u0026laquo;\u0026laquo;\u0026lt; HEAD\nConfiguration du bouton Accueil Si l\u0026rsquo;option disableLandingPage est définie sur false, un bouton \u0026ldquo;Accueil\u0026rdquo; apparaîtra dans le menu de gauche. C\u0026rsquo;est une alternative pour cliquer sur le logo. Pour modifier le vous devrez configurer deux paramètres pour les langues définies :\n[Lanugages] [Lanugages.en] ... landingPageURL = \u0026#34;/en\u0026#34; landingPageName = \u0026#34;\u0026lt;i class=\u0026#39;fas fa-home\u0026#39;\u0026gt;\u0026lt;/i\u0026gt; Redirect to Home\u0026#34; ... [Lanugages.fr] ... landingPageURL = \u0026#34;/fr\u0026#34; landingPageName = \u0026#34;\u0026lt;i class=\u0026#39;fas fa-home\u0026#39;\u0026gt;\u0026lt;/i\u0026gt; Accueil\u0026#34; ... Si ces paramètres ne sont pas configurés pour une langue spécifique, ils obtiendront leur valeurs par défaut:\nlandingPageURL = \u0026#34;/\u0026#34; landingPageName = \u0026#34;\u0026lt;i class=\u0026#39;fas fa-home\u0026#39;\u0026gt;\u0026lt;/i\u0026gt; Home\u0026#34; Le bouton d\u0026rsquo;accueil va ressembler à ceci:\n023fe7ef2b4c45fe66ac932d9e25d09f30b74a4e\n"
},
{
	"uri": "/fr/basics/style-customization/",
	"title": "Personnalisation du style",
	"tags": [],
	"description": "",
	"content": "Hugo-theme-learn a été conçu pour être aussi configurable que possible en définissant plusieurs partials\nDans themes/hugo-theme-learn/layouts/partials/, vous pourrez trouver tous les partials définis pour ce thème. Si vous avez besoin d\u0026rsquo;écraser quelque chose, ne modifiez pas le code directement. A la place, suivez cette page. Vous créerez alors un nouveau partial dans le dossier layouts/partials de votre site local. Ce partial aura la priorité.\nCe thème définit les partials suivant :\nheader: l\u0026rsquo;en-tête de la page page (contient le fil d\u0026rsquo;Ariane). Pas voué à être écrasé custom-header: En-tête personnalisé. Voué à être écrasé quand vous ajoutez des imports CSS. N\u0026rsquo;oubliez pas d\u0026rsquo;inclure la balise HTML style dans votre fichier footer: le pied-de-page de la page (contains les flèches). Pas voué à être écrasé custom-footer: Pied-de-page personnalisé. Voué à être écrasé quand vous ajoutez du Javascript. N\u0026rsquo;oubliez pas d\u0026rsquo;inclure la balise HTML javascript dans votre fichier favicon: le favicon logo: le logo, affiché un haut à gauche. meta: les balises HTML meta, que vous pouvez écraser sans problème. menu: Le menu à gauche. Pas voué à être écrasé menu-footer: Le pied-de-page du menu search: le champ de recherche toc: le sommaire Changer le logo Créez un nouveau fichier dans layouts/partials/, nommé logo.html. Puis, écrivez le code HTML voulu. Vous pourriez utiliser une balise HTML img et référencer une image créée dans le dossier static, voire même y coller un code SVG !\nLa taille du logo va s\u0026rsquo;adapter automatiquement\nChanger le favicon Si votre favicon est un png, déposez votre image dans votre dossier local static/images/ et nommez le favicon.png\nSi vous avez besoin de changer ce comportement par défaut, créer un nouveau fichier dans layouts/partials/ et nommez le favicon.html. Puis ajoutez quelque chose comme:\n\u0026lt;link rel=\u0026#34;shortcut icon\u0026#34; href=\u0026#34;/images/favicon.png\u0026#34; type=\u0026#34;image/x-icon\u0026#34; /\u0026gt; Changer les couleurs par défaut Hugo Learn theme vous permet de choisir nativement entre 3 schéma de couleurs, mais n\u0026rsquo;hésitez pas à en ajouter d\u0026rsquo;autres ! Les couleurs par défaut sont celles de Grav Learn Theme.\nVariante rouge [params] # Modifier le schéma de couleur par défaut. Peut être \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;red\u0026#34; Variante bleue [params] # Modifier le schéma de couleur par défaut. Peut être \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;blue\u0026#34; Variante verte [params] # Modifier le schéma de couleur par défaut. Peut être \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;green\u0026#34; Votre variante Premièrement, créez un nouveau fichier CSS dans votre dossier static/css, préfixé par theme (ex: avec le theme_lemien_ static/css/theme-lemien.css). Copiez le contenu suivant et modifiez les couleurs dans les variables CSS.\n:root{ --MAIN-TEXT-color:#323232; /* Color of text by default */ --MAIN-TITLES-TEXT-color: #5e5e5e; /* Color of titles h2-h3-h4-h5 */ --MAIN-LINK-color:#1C90F3; /* Color of links */ --MAIN-LINK-HOVER-color:#167ad0; /* Color of hovered links */ --MAIN-ANCHOR-color: #1C90F3; /* color of anchors on titles */ --MENU-HEADER-BG-color:#1C90F3; /* Background color of menu header */ --MENU-HEADER-BORDER-color:#33a1ff; /*Color of menu header border */ --MENU-SEARCH-BG-color:#167ad0; /* Search field background color (by default borders + icons) */ --MENU-SEARCH-BOX-color: #33a1ff; /* Override search field border color */ --MENU-SEARCH-BOX-ICONS-color: #a1d2fd; /* Override search field icons color */ --MENU-SECTIONS-ACTIVE-BG-color:#20272b; /* Background color of the active section and its childs */ --MENU-SECTIONS-BG-color:#252c31; /* Background color of other sections */ --MENU-SECTIONS-LINK-color: #ccc; /* Color of links in menu */ --MENU-SECTIONS-LINK-HOVER-color: #e6e6e6; /* Color of links in menu, when hovered */ --MENU-SECTION-ACTIVE-CATEGORY-color: #777; /* Color of active category text */ --MENU-SECTION-ACTIVE-CATEGORY-BG-color: #fff; /* Color of background for the active category (only) */ --MENU-VISITED-color: #33a1ff; /* Color of \u0026#39;page visited\u0026#39; icons in menu */ --MENU-SECTION-HR-color: #20272b; /* Color of \u0026lt;hr\u0026gt; separator in menu */ } body { color: var(--MAIN-TEXT-color) !important; } textarea:focus, input[type=\u0026#34;email\u0026#34;]:focus, input[type=\u0026#34;number\u0026#34;]:focus, input[type=\u0026#34;password\u0026#34;]:focus, input[type=\u0026#34;search\u0026#34;]:focus, input[type=\u0026#34;tel\u0026#34;]:focus, input[type=\u0026#34;text\u0026#34;]:focus, input[type=\u0026#34;url\u0026#34;]:focus, input[type=\u0026#34;color\u0026#34;]:focus, input[type=\u0026#34;date\u0026#34;]:focus, input[type=\u0026#34;datetime\u0026#34;]:focus, input[type=\u0026#34;datetime-local\u0026#34;]:focus, input[type=\u0026#34;month\u0026#34;]:focus, input[type=\u0026#34;time\u0026#34;]:focus, input[type=\u0026#34;week\u0026#34;]:focus, select[multiple=multiple]:focus { border-color: none; box-shadow: none; } h2, h3, h4, h5 { color: var(--MAIN-TITLES-TEXT-color) !important; } a { color: var(--MAIN-LINK-color); } .anchor { color: var(--MAIN-ANCHOR-color); } a:hover { color: var(--MAIN-LINK-HOVER-color); } #sidebar ul li.visited \u0026gt; a .read-icon { color: var(--MENU-VISITED-color); } #body a.highlight:after { display: block; content: \u0026#34;\u0026#34;; height: 1px; width: 0%; -webkit-transition: width 0.5s ease; -moz-transition: width 0.5s ease; -ms-transition: width 0.5s ease; transition: width 0.5s ease; background-color: var(--MAIN-LINK-HOVER-color); } #sidebar { background-color: var(--MENU-SECTIONS-BG-color); } #sidebar #header-wrapper { background: var(--MENU-HEADER-BG-color); color: var(--MENU-SEARCH-BOX-color); border-color: var(--MENU-HEADER-BORDER-color); } #sidebar .searchbox { border-color: var(--MENU-SEARCH-BOX-color); background: var(--MENU-SEARCH-BG-color); } #sidebar ul.topics \u0026gt; li.parent, #sidebar ul.topics \u0026gt; li.active { background: var(--MENU-SECTIONS-ACTIVE-BG-color); } #sidebar .searchbox * { color: var(--MENU-SEARCH-BOX-ICONS-color); } #sidebar a { color: var(--MENU-SECTIONS-LINK-color); } #sidebar a:hover { color: var(--MENU-SECTIONS-LINK-HOVER-color); } #sidebar ul li.active \u0026gt; a { background: var(--MENU-SECTION-ACTIVE-CATEGORY-BG-color); color: var(--MENU-SECTION-ACTIVE-CATEGORY-color) !important; } #sidebar hr { border-color: var(--MENU-SECTION-HR-color); } Puis, configurez le paramètre themeVariant avec le nom de votre variante. C\u0026rsquo;est tout !\n[params] # Modifier le schéma de couleur par défaut. Peut être \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;lemien\u0026#34; "
},
{
	"uri": "/fr/",
	"title": "Documentation du thème Hugo Learn",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/fr/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/fr/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]